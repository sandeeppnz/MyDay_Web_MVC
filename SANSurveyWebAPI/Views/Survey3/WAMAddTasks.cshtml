@model SANSurveyWebAPI.ViewModels.Web.SurveyTasks1ViewModel
@{
    if (!Request.IsAjaxRequest())
    { Layout = "~/Views/Shared/_LayoutSurvey.cshtml"; }
    ViewBag.Title = "Survey: Select Tasks";
    DateTime TaskStartDateTime = (DateTime) Session["SurveyStartTime"];
    string TaskStartTime = TaskStartDateTime.ToString("hh:mm tt");
    DateTime TaskEndDateTime = (DateTime) Session["SurveyEndTime"];
    string TaskEndTime = TaskEndDateTime.ToString("hh:mm tt");
}
<link href="~/Content/iCheck/skins/flat/green.css" rel="stylesheet" />
<script src="~/Scripts/iCheck/icheck.min.js"></script>
@{
    var rowsPerPage = 4;
    int noPages = 0;
    int currRow = 0;

    if (Model.FullTaskList.Count % rowsPerPage != 0)
    {
        noPages = (Model.FullTaskList.Count / rowsPerPage) + 1;
        currRow = 1;
    }
    else
    {
        noPages = (Model.FullTaskList.Count / rowsPerPage);
        currRow = 1;
    }
}
@using (Ajax.BeginForm("WAMAddTasks", "Survey3", new AjaxOptions
{
    HttpMethod = "POST",
    Url = @Url.Action("WAMAddTasks", "Survey3"),
    OnSuccess = "OnSuccess",
    OnFailure = "OnFailure"
}, new { id = "frmWAMAddTasks1", @class = "nav-right" }))
{
    @Html.HiddenFor(model => model.PageStartDateTimeUtc)
    @Html.HiddenFor(model => model.Uid, new { @id = "txtuid" })
    @Html.ValidationSummary(true, "Please check the form for errors.")

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                Which other task did you do between 
                @TaskStartTime and @TaskEndTime?
            </h3>
        </div>
        <div class="panel-body">
            <div id="CarouselContainer"><div><i>Please select a task.</i></div>
                <div class="responsive slider" id="slidercarousel">
                    @for (int page = 0; page < noPages; page++)
                    {
                        <div id="CarouselInnerContainer">
                            @while ((page * rowsPerPage) + currRow <= Model.FullTaskList.Count)
                            {
                                <div class="funkyradio funkyradio-default box">
                                    <input type="radio" name=selectedTasks id=@("checkbox" + ((page*rowsPerPage) +currRow)) value=@Model.FullTaskList[((page * rowsPerPage) + currRow)-1].ID checked=@Model.FullTaskList[((page * rowsPerPage) + currRow)-1].IsChecked disabled=@Model.FullTaskList[((page * rowsPerPage) + currRow)-1].IsSelectedBefore />
                                    <label id=@(((page*rowsPerPage) +currRow)) name="selectedTasksLabel" class="" for=@("checkbox" + ((page*rowsPerPage) + currRow ))>
                                        @Model.FullTaskList[((page * rowsPerPage) + currRow) - 1].Display
                                        <span id=@("tooltip_" + ((page*rowsPerPage) +currRow)) class="tooltipTask" title="@Model.FullTaskList[((page * rowsPerPage) + currRow) - 1].Description"></span>
                                        <span class="tooltipTask" title="@Model.FullTaskList[((page * rowsPerPage) + currRow) - 1].Description"><sup>[?]</sup></span>
                                    </label>
                                </div>
                                if (currRow % rowsPerPage == 0)
                                { break; }
                                currRow++;
                            }
                            @{ currRow = 1; }
                        </div>  }
                </div>
            </div>
            <div style="padding-left:20px;padding-right:50px">
                <div class="funkyradio funkyradio-default">
                    <input type="checkbox" name='OtherCKBox' id='OtherCKBox' value='Other' />
                    <label for='OtherCKBox'>
                        Other
                    </label>
                </div>
                <br />
                <div id="OtherTaskPanel">
                    <div class="form-group">
                        <label class="col-sm-3 col-form-label">
                            What were you doing?
                        </label>
                        <small id="PlacementHospitalNameOther_Incomplete" class="invalid"><i class="fa fa-info-circle" aria-hidden="true"></i>&nbsp;Incomplete</small>
                    <div>
                            @Html.TextBoxFor(model => model.OtherTaskName, new {@id = "txtOtherTaskName",
                                            @class = "form-control", @placeholder = "Type your task"})
                        </div>
                    </div>
                </div>
                </div>
            </div>
        <center>
            <div style="padding:10px">
                <button class="btn btn-success btn-lg" id="btnNext" type="submit">Next&nbsp;&nbsp;<i class="fa fa-angle-right" aria-hidden="true"></i></button>
            </div>
        </center>       
    </div>
        @Html.Partial("_DialogTask")
        @Html.Partial("_DialogTaskDuplicate")
        @Html.Partial("_DialogTaskOtherName")
                                @Html.Partial("_FooterSurvey")}
<script>
    var inst = $("#DialogTask").remodal();
    var instDuplicate = $("#DialogTaskDuplicate").remodal();
    var intOtherText = $("#_DialogTaskOtherName").remodal();


    function RemoveCustomValidation() {
        $('#PlacementHospitalNameOther_Incomplete').hide();
    }

    function AddCustomValidation() {
        $('#PlacementHospitalNameOther_Incomplete').show();
    }

    $('#txtOtherTaskName').change(function () {
        $('#PlacementHospitalNameOther_Incomplete').hide();

    });


    $('#OtherCKBox').change(function () {

        if ($("input[id^='checkbox']:checked").length >= 1) {
            $('#frmWAMAddTasks1 input[type="radio"]:checked').each(function () {
                //$(this).checked = false;
                $(this).prop('checked', false);
            });
        }

        if ($(this).is(":checked")) {
            $('#OtherTaskPanel').show();
            //var returnVal = confirm("Are you sure?");
            //$(this).attr("checked", returnVal);
        }
        else {
            $('#OtherTaskPanel').hide();
        }
        //$('#textbox1').val($(this).is(':checked'));
    });


    $('#frmWAMAddTasks1 input[type="radio"]').change(function () {
        $('#OtherCKBox').prop('checked', false);
        $('#OtherTaskPanel').hide();
    });


    $(document).on('cancellation', '#_DialogTaskOtherName', function () {
    });

    $(document).on('cancellation', '#DialogTask', function () {
    });
    $(document).on('confirmation', '#DialogTask', function () {
        inst.destroy();
        instDuplicate.destroy();
    });


            


    function OnSuccess(response) {
        if (response == "") {
            window.location.href = "@Url.Action("ConnectionError", "Survey3")";
        }
        else {
            $.ajaxSetup({ cache: false });
            $('#MainSurveyContent').html(response);
        }
    }
    function OnFailure(response) {
        alert("Oops! submission failed. Please ensure you are connected to the network.");
    }
    $(document).ready(function () {

        RemoveCustomValidation();
        $('#OtherTaskPanel').hide();

        //window.history.pushState("Survey", "Survey", "/App/Survey3/SID/" + $('#txtuid').val());

        $("label[name^='selectedTasksLabel']").kendoTouch({
            touchstart: function (e) {
            },
            hold: function (e) {
                $('#tooltip_' + e.touch.currentTarget.id).tooltipster('open');
            }
        });
        $.ajaxSetup({ cache: false });
        $('#btnNext').on("click", function (e) {
            //e.preventDefault();
            if ($("input[name^='selectedTasks']:checked").length != 1) {
                if ($('#OtherCKBox').is(":checked")) {
                    //check if textbox is full

                    var textBox = $('#txtOtherTaskName').val();
                    if (textBox == "") {
                        //alert();
                        e.preventDefault();
                        AddCustomValidation();
                        intOtherText.open();
                    }
                    else {
                        inst.destroy();
                        instDuplicate.destroy();
                        intOtherText.destroy();
                        $('#frmWAMAddTasks1').submit();
                    }


                }
                else {
                    e.preventDefault();
                    inst.open();
                }


            }
            else {
                //radio selected
                inst.destroy();
                instDuplicate.destroy();
                intOtherText.destroy();

                $('#frmWAMAddTasks1').submit();
            }
        });

        $('.responsive').slick({
            dots: true,
            infinite: false,
            speed: 300,
            slidesToShow: 3,
            slidesToScroll: 3,
            responsive: [
                {
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 2,
                        infinite: true,
                        dots: true
                    }
                },
                {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1
                    }
                },
                {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1
                    }
                }
            ]
        });
        $('.tooltipTask').tooltipster({
            timer: 3000,
        });
    });
</script>
