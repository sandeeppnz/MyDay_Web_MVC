@model SANSurveyWebAPI.ViewModels.Web.EmoSummaryVM
@{ if (!Request.IsAjaxRequest())
    { Layout = "~/Views/Shared/_LayoutKids.cshtml"; }
    ViewBag.Title = "Survey: Summary";
    int surveyId = 0;
    string taskStartDate = string.Empty; ;
    string taskName = string.Empty;
    string taskDescription = string.Empty;
    string taskDuration = string.Empty;
    string taskTimeSpan = string.Empty;
    string location = string.Empty;
    string otherLocation = string.Empty;    
    int emoId = 0;
    string justTrimTask = string.Empty;
    string otherMOT = string.Empty;
}
@using (Ajax.BeginForm("EmoSummary", "Kids",
                                    new AjaxOptions
                                    {
                                        HttpMethod = "POST",
                                        OnSuccess = "OnSuccess",
                                        OnFailure = "OnFailure"
                                    }, new { id = "frmEmoSummary", @class = "nav-right" }))
{
    @Html.ValidationSummary(true, "Please check the form for errors.")
    <div class="panel panel-default" id="Tasks">        
            <div class="panel-heading" style="padding-top:5px">
                <h3 style="padding-bottom:10px;padding-top:0px">
                    Summary
                    <button class="btn btn-success pull-right" id="btnNext2" type="button"><i class="fa fa-paper-plane"></i>&nbsp;&nbsp;Submit</button>
                </h3>
            </div>
        <br /><br />
        <label class="locTitle locTitle-info">@Model.FromLocationName</label>      
        
        <!-- KIDS FROM LOCATION-->
        @if (@Model.FullFromLocationList != null && @Model.FullFromLocationList.Count > 0)
        {
            <div class="panel-body">
                @foreach (var kv in @Model.FullFromLocationList)
                {
                    int taskId = kv.First().Id;
                    {
                        int l = kv.Key.IndexOf("STARTDATESAN");
                        if (l > 0)
                        {
                            taskName = kv.Key.Substring(0, l).Trim();
                            location = (kv.First().KidsTravelId == null) ? kv.First().Location
                                            : ((kv.First().ModeOfTransport == "Other") ? kv.First().OtherModeOfTransport
                                                : kv.First().ModeOfTransport);
                            //(kv.First().Location != "Other")? kv.First().Location : kv.First().OtherModeOfTransport;
                            otherLocation = kv.First().OtherLocation;
                            taskStartDate = kv.First().SurveyDate;
                            taskDescription = (kv.First().KidsTravelId != null) ? "During Travel" :
                                ((kv.First().TaskPerformed != "Other") ? kv.First().TaskPerformed : kv.First().OtherTasks);
                            justTrimTask = taskDescription.Contains(",") ?
                                    ((taskDescription.Length > 24) ?
                                        (taskDescription.Substring(0, 24).Trim() + "...")
                                        : taskDescription)
                                     : taskDescription;
                            taskDuration = kv.First().StartTime + " - " + kv.First().EndTime;
                            taskTimeSpan = kv.First().StartTime + " - " + kv.First().EndTime;
                            emoId = kv.First().EmoId;
                        }
                    }
                    <div class="col-md-4 col-sm-6">
                        <div class="card-container">
                            <div class="card">
                                <div class="front">
                                    <div class="content">
                                        <div class="main">
                                            <h3 class="name">@taskDescription</h3> 
                                            <br />
                                            @*<p class="text-center"> @taskDescription </p>*@<br />
                                            <h4 class="text-center">
                                                <i class="fa fa-clock-o fa-2x" aria-hidden="true"></i>
                                            </h4>
                                            <h4 class="text-center"> @taskDuration <span></span></h4>
                                        </div>
                                        <div class="footer">
                                            <span class="btn btn-success" style="padding-left:100px;padding-right:100px;">
                                                View
                                            </span>
                                        </div>
                                    </div>
                                </div> <!-- end front panel -->
                                <div class="back">
                                    <h5 class="name">@justTrimTask</h5>
                                    @{
                                        int innerCounter = 1;//= 0;
                                        foreach (var row in kv)
                                        {
                                            if (innerCounter == 0)
                                            { innerCounter = 1; }
                                            else
                                            {
                                                <div class="stats-container">
                                                    <div class="stats" style="padding-bottom:10px;">
                                                        <h5>@row.Question</h5>
                                                        <i class='@row.RatingString' aria-hidden="true"></i>
                                                        <h5 style="font-size:11px">
                                                            @row.Answer
                                                        </h5>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                    <div class="footer">
                                        <center>
                                            @Ajax.ActionLink("Edit", // <-- Text to display
                                                     "EditReaction", new { emoId, taskStartDate },  // <-- Action Method Name
                                                      new AjaxOptions
                                                      {
                                                          //AllowCache = false,
                                                          UpdateTargetId = "MainSurveyContent", // <-- DOM element ID to update
                                                          InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
                                                          HttpMethod = "GET" // <-- HTTP method
                                                      },
                                                      new { @class = "btn btn-success", @style = "padding-left:100px;padding-right:100px" })
                                        </center>
                                    </div>
                                </div> <!-- end back panel -->
                            </div> <!-- end card -->
                        </div> <!-- end card-container -->
                    </div>

               }
            </div>
        }
        <label class="locTitle locTitle-info">@Model.TravelFromTo</label>
        <!-- KIDS TRAVEL-->
        @if (@Model.FullTravelList != null && @Model.FullTravelList.Count > 0)
        {
            <div class="panel-body">
                @foreach (var kv in @Model.FullTravelList)
                {
                    int taskId = kv.First().Id;
                    {
                        int l = kv.Key.IndexOf("STARTDATESAN");
                        if (l > 0)
                        {
                            taskName = kv.Key.Substring(0, l).Trim();
                            location = (kv.First().KidsTravelId == null) ? kv.First().Location
                                            : ((kv.First().ModeOfTransport == "Other") ? kv.First().OtherModeOfTransport
                                                : kv.First().ModeOfTransport);
                            //(kv.First().Location != "Other")? kv.First().Location : kv.First().OtherModeOfTransport;
                            otherLocation = kv.First().OtherLocation;
                            taskStartDate = kv.First().SurveyDate;
                            taskDescription = (kv.First().KidsTravelId != null) ? "During Travel" :
                                ((kv.First().TaskPerformed != "Other") ? kv.First().TaskPerformed : kv.First().OtherTasks);
                            justTrimTask = taskDescription.Contains(",") ?
                                    ((taskDescription.Length > 24) ?
                                        (taskDescription.Substring(0, 24).Trim() + "...")
                                        : taskDescription)
                                     : taskDescription;
                            taskDuration = kv.First().StartTime + " - " + kv.First().EndTime;
                            taskTimeSpan = kv.First().StartTime + " - " + kv.First().EndTime;
                            emoId = kv.First().EmoId;
                        }
                    }
                    <div class="col-md-4 col-sm-6">
                        <div class="card-container">
                            <div class="card">
                                <div class="front">
                                    <div class="content">
                                        <div class="main">
                                            <h3 class="name">@taskDescription</h3>
                                            <br />
                                            @*<p class="text-center"> @taskDescription </p>*@<br />
                                            <h4 class="text-center">
                                                <i class="fa fa-clock-o fa-2x" aria-hidden="true"></i>
                                            </h4>
                                            <h4 class="text-center"> @taskDuration <span></span></h4>
                                        </div>
                                        <div class="footer">
                                            <span class="btn btn-success" style="padding-left:100px;padding-right:100px;">
                                                View
                                            </span>
                                        </div>
                                    </div>
                                </div> <!-- end front panel -->
                                <div class="back">
                                    <h5 class="name">@justTrimTask</h5>
                                    @{
                                        int innerCounter = 1;//= 0;
                                        foreach (var row in kv)
                                        {
                                            if (innerCounter == 0)
                                            { innerCounter = 1; }
                                            else
                                            {
                                                <div class="stats-container">
                                                    <div class="stats" style="padding-bottom:10px;">
                                                        <h5>@row.Question</h5>
                                                        <i class='@row.RatingString' aria-hidden="true"></i>
                                                        <h5 style="font-size:11px">
                                                            @row.Answer
                                                        </h5>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                    <div class="footer">
                                        <center>
                                            @Ajax.ActionLink("Edit", // <-- Text to display
                                                     "EditReaction", new { emoId, taskStartDate },  // <-- Action Method Name
                                                      new AjaxOptions
                                                      {
                                                          //AllowCache = false,
                                                          UpdateTargetId = "MainSurveyContent", // <-- DOM element ID to update
                                                          InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
                                                          HttpMethod = "GET" // <-- HTTP method
                                                      },
                                                      new { @class = "btn btn-success", @style = "padding-left:100px;padding-right:100px" })
                                        </center>
                                    </div>
                                </div> <!-- end back panel -->
                            </div> <!-- end card -->
                        </div> <!-- end card-container -->
                    </div>

                                        }
            </div>
        }
        <label class="locTitle locTitle-info">@Model.ToLocationName</label>
        <!-- KIDS TO LOCATION-->
        @if (@Model.FullToLocationList != null && @Model.FullToLocationList.Count > 0)
        {
            <div class="panel-body">
                @foreach (var kv in @Model.FullToLocationList)
                {
                    int taskId = kv.First().Id;
                    {
                        int l = kv.Key.IndexOf("STARTDATESAN");
                        if (l > 0)
                        {
                            taskName = kv.Key.Substring(0, l).Trim();
                            location = (kv.First().KidsTravelId == null) ? kv.First().Location
                                            : ((kv.First().ModeOfTransport == "Other") ? kv.First().OtherModeOfTransport
                                                : kv.First().ModeOfTransport);
                            //(kv.First().Location != "Other")? kv.First().Location : kv.First().OtherModeOfTransport;
                            otherLocation = kv.First().OtherLocation;
                            taskStartDate = kv.First().SurveyDate;
                            taskDescription = (kv.First().KidsTravelId != null) ? "During Travel" :
                                ((kv.First().TaskPerformed != "Other") ? kv.First().TaskPerformed : kv.First().OtherTasks);
                            justTrimTask = taskDescription.Contains(",") ?
                                    ((taskDescription.Length > 24) ?
                                        (taskDescription.Substring(0, 24).Trim() + "...")
                                        : taskDescription)
                                     : taskDescription;
                            taskDuration = kv.First().StartTime + " - " + kv.First().EndTime;
                            taskTimeSpan = kv.First().StartTime + " - " + kv.First().EndTime;
                            emoId = kv.First().EmoId;
                        }
                    }
                    <div class="col-md-4 col-sm-6">
                        <div class="card-container">
                            <div class="card">
                                <div class="front">
                                    <div class="content">
                                        <div class="main">
                                            <h3 class="name">@taskDescription</h3>
                                            <br />
                                            @*<p class="text-center"> @taskDescription </p>*@<br />
                                            <h4 class="text-center">
                                                <i class="fa fa-clock-o fa-2x" aria-hidden="true"></i>
                                            </h4>
                                            <h4 class="text-center"> @taskDuration <span></span></h4>
                                        </div>
                                        <div class="footer">
                                            <span class="btn btn-success" style="padding-left:100px;padding-right:100px;">
                                                View
                                            </span>
                                        </div>
                                    </div>
                                </div> <!-- end front panel -->
                                <div class="back">
                                    <h5 class="name">@justTrimTask</h5>
                                    @{
                                        int innerCounter = 1;//= 0;
                                        foreach (var row in kv)
                                        {
                                            if (innerCounter == 0)
                                            { innerCounter = 1; }
                                            else
                                            {
                                                <div class="stats-container">
                                                    <div class="stats" style="padding-bottom:10px;">
                                                        <h5>@row.Question</h5>
                                                        <i class='@row.RatingString' aria-hidden="true"></i>
                                                        <h5 style="font-size:11px">
                                                            @row.Answer
                                                        </h5>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                    <div class="footer">
                                        <center>
                                            @Ajax.ActionLink("Edit", // <-- Text to display
                                                     "EditReaction", new { emoId, taskStartDate },  // <-- Action Method Name
                                                      new AjaxOptions
                                                      {
                                                          //AllowCache = false,
                                                          UpdateTargetId = "MainSurveyContent", // <-- DOM element ID to update
                                                          InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
                                                          HttpMethod = "GET" // <-- HTTP method
                                                      },
                                                      new { @class = "btn btn-success", @style = "padding-left:100px;padding-right:100px" })
                                        </center>
                                    </div>
                                </div> <!-- end back panel -->
                            </div> <!-- end card -->
                        </div> <!-- end card-container -->
                    </div>

                                        }
            </div>
        }
        
        <!-- KIDS COMMENTS -->
        @if (@Model.Comment != null && !String.IsNullOrEmpty(@Model.Comment))
        {
            <div class="panel-heading" style="padding-top:5px">
                <h3 style="padding-bottom:10px;padding-top:0px">
                    Comments
                </h3>
            </div>
            <div class="panel-body">
                <label>
                    @Model.Comment)
                </label>
            </div>
        }
        <button class="btn btn-success btn-block btn-lg" id="btnNext" type="button"><i class="fa fa-paper-plane" aria-hidden="true"></i>&nbsp;&nbsp;Submit</button>
    </div>
    @Html.Partial("_DialogLoop")
                                        @Html.Partial("_FooterSurvey")
                                        }
<script src="~/Scripts/StopBack/StopBackBrowserButton.js"></script>
<script>
    var options = {closeOnOutsideClick: false, hashTracking: false, closeOnEscape: false };
    var dialogComplete = $('[data-remodal-id=DialogLoop]').remodal(options);

    $(document).on('confirmation', '#DialogLoop', function () {
    });

    $(document).on('cancellation', '#DialogLoop', function (event) {
        $.ajax({
            datatype: "html",
            type: "GET",
            url: "@(Url.Action("Index", "Home"))",
            cache: false,
            success: function (data) {
                window.location.href = "@Url.Action("Index", "Home")";
            }
        });
    });

    function OnSuccess(response) {
    }
    function OnFailure(response) {
        alert("Oops! submission failed. Please ensure you are connected to the network.");
    }

    $(document).ready(function () {
        window.history.pushState("Kids", "Kids", "/Kids/EmoSummary");
        $('#btnNext').on("click", function (e) {
            dialogComplete.open();
        });

        $('#btnNext2').on("click", function (e) {
            dialogComplete.open();
        });
    });
</script>
<style>    
    .locTitle-info.locTitle-info {
    background-color: teal;/*#5bc0de;*/
}.locTitle {
    display: inline;
    padding: .2em .6em .3em;
    font-size: 19px;
    font-weight: 500;
    line-height: 1.1;
    color: #fff;
    text-align: center;
    white-space: nowrap;
    vertical-align: baseline;
    border-radius: .25em;
    margin-left:37px;
}

</style>